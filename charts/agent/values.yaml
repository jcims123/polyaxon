deploymentChart: agent
deploymentType: kubernetes
namespace: polyaxon
limitResources: false

rbac:
  enabled: true

externalServices:
  gateway: {}
  api: {}

auth:
  enabled: true

ingress:
  enabled: false
  backend: gateway
  hostName:
  # Default path is `/`
  path:
  # Extra paths to prepend to every host configuration. This is useful when configuring custom actions with
  # [AWS ALB Ingress Controller](https://kubernetes-sigs.github.io/aws-alb-ingress-controller/guide/ingress/annotation/#actions).
  extraPaths: []
  # - path: /*
  #   backend:
  #     serviceName: ssl-redirect
  #     servicePort: use-annotation
  # Ingress TLS configuration
  # Secrets must be manually created in the namespace
  tls: []
  # - secretName: polyaxon.cluster.local-tls
  #   hosts:
  #     - polyaxon.cluster.local

  # Ingress extra labels
  labels:

  # Default annotation, some of these values allow uploading large files to the API
  # if you are using a different ingress other than nginx, you need to adapt the annotations.
  annotations:

  #  ingress.kubernetes.io/ssl-redirect: "false"
  #  ingress.kubernetes.io/rewrite-target: /
  #  ingress.kubernetes.io/add-base-url: "true"
  #  ingress.kubernetes.io/proxy-connect-timeout: "600"
  #  ingress.kubernetes.io/proxy-read-timeout: "600"
  #  ingress.kubernetes.io/proxy-send-timeout: "600"
  #  ingress.kubernetes.io/send-timeout: "600"
  #  ingress.kubernetes.io/proxy-body-size: 4G

  # kubernetes.io/tls-acme: 'true'

# To set ssl and serve https with Polyaxon deployed with NodePort service
ssl: {}

# Custom cluster dns setup
dns: {}

# Time zone
timezone: 'UTC'

# To provide a secret name with all passwords and api keys instead of using the config.yaml deployment file
# possible values:
# * agent: key
agentSecret:

gateway:
  enabled: true
  image: polyaxon/polyaxon-gateway
  imageTag: 1.1.8-rc1
  imagePullPolicy: Always
  replicas: 1
  resources:
    limits:
      cpu: 500m
      memory: 2000Mi
    requests:
      cpu: 100m
      memory: 50Mi

  service:
    name: gateway
    type: ClusterIP
    port: 80
    targetPort: 80
    nodePort: 31833
    annotations: {}

streams:
  enabled: true
  image: polyaxon/polyaxon-streams
  imageTag: 1.1.8-rc1
  imagePullPolicy: Always
  replicas: 1
  resources:
    limits:
      cpu: 1000m
      memory: 2000Mi
    requests:
      cpu: 128m
      memory: 300Mi

  service:
    name: streams
    type: ClusterIP
    port: 80
    targetPort: 80
    nodePort: 31822
    annotations: {}

  hpa:
    enabled: false
    cputhreshold: 70
    minpods: 1
    maxpods: 4

init:
  image: polyaxon/polyaxon-init
  imageTag: 1.1.8-rc1
  imagePullPolicy: Always
  resources:
    limits:
      cpu: 1000m
      memory: 2000Mi
    requests:
      cpu: 100m
      memory: 100Mi

sidecar:
  image: polyaxon/polyaxon-sidecar
  imageTag: 1.1.8-rc1
  imagePullPolicy: Always
  sleepInterval: 10
  syncInterval: 10
  resources:
    limits:
      cpu: 1000m
      memory: 2000Mi
    requests:
      cpu: 100m
      memory: 100Mi

agent:
  token:
  instance:
  enabled: true
  image: polyaxon/polyaxon-agent
  imageTag: 1.1.8-rc1
  imagePullPolicy: Always
  resources:
    limits:
      cpu: 500m
      memory: 2000Mi
    requests:
      cpu: 100m
      memory: 100Mi

operator:
  enabled: true
  skipCRD: false
  image: polyaxon/polyaxon-operator
  imageTag: 1.1.8-rc1
  imagePullPolicy: Always
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 50Mi

cleanHooks:
  image: polyaxon/polyaxon-cli
  imageTag: 1.1.8-rc1
  imagePullPolicy: Always

securityContext:
  enabled: false
  user: 2222
  group: 2222

nodeSelector: {}
tolerations: []
affinity:
  podAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: type
              operator: In
              values:
              - "polyaxon-core"
          topologyKey: "kubernetes.io/hostname"

imagePullSecrets: []

# Please do not change this value,
# if you want to provide a custom artifacts store, please use artifactsStore.
# This is used as a fallback when no artifactsStore is provided
defaultArtifactsStore:
  name: default-artifacts-store
  kind: host_path
  schema: {"hostPath": "/tmp/artifactsStore", "mountPath": "/artifactsStore"}

artifactsStore:
connections: []
notificationConnections: []

# Include helm chart release revision
includeChartRevision: true
istio: {}
operators: {}
api: {}
ui: {}
